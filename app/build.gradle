buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'

if(new File('app/crashlytics.properties').exists()) {
    apply plugin: 'io.fabric'
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 22
    buildToolsVersion "22.0.0"

    defaultConfig {
        applicationId "com.liato.bankdroid"
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 215
        versionName "1.9.9.5"
    }

    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword ""
            keyAlias "andmrkt"
            keyPassword ""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    // Get signing keys for release
    gradle.taskGraph.whenReady { taskGraph ->
        if(taskGraph.hasTask(':app:assembleRelease')) {
            if(System.console() != null) { 
                def keystorePassword = System.console().readPassword("\nEnter keystore password: ")
                keystorePassword = new String(keystorePassword)
                if(keystorePassword.isEmpty()) {
                    throw new InvalidUserDataException("You must enter a keystore password to proceed.")
                }
                def password = System.console().readPassword("Enter key password: ")
                password = new String(password)
                if(password.isEmpty()) {
                    throw new InvalidUserDataException("You must enter a password to proceed.")
                }
                android.signingConfigs.release.storePassword keystorePassword
                android.signingConfigs.release.keyPassword password
            }
        }
    }
        
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            ext.enableCrashlytics = false
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':bankdroid-legacy')
    compile project(':bankdroid-core')
    compile 'com.jakewharton:butterknife:6.1.0'
    compile "com.android.support:appcompat-v7:22.0.+"
    compile 'com.google.collections:google-collections:1.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.2.1@aar') {
        transitive = true;
    }
}
